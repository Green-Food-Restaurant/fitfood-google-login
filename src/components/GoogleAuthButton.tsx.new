import React from 'react';
import { Button } from "@/components/ui/button";
import { toast } from "@/components/ui/sonner";
import { GoogleLogin } from '@react-oauth/google';
import { useNavigate } from 'react-router-dom';
import { useAuth } from '@/hooks/useAuth';

// Definir manualmente o tipo para CredentialResponse já que não temos @types disponível
interface CredentialResponse {
  credential?: string;
  select_by?: string;
  clientId?: string;
}

interface GoogleAuthButtonProps {
  rememberMe?: boolean;
}

const GoogleAuthButton: React.FC<GoogleAuthButtonProps> = ({ rememberMe = false }) => {
  const navigate = useNavigate();
  const { login, loading, error } = useAuth();

  const handleLoginSuccess = async (credentialResponse: CredentialResponse): Promise<void> => {
    try {
      console.log('Resposta de credenciais recebida');

      // Verificar se temos a credencial
      if (!credentialResponse.credential) {
        console.error('Credencial não encontrada na resposta');
        toast.error('Falha na autenticação. Tente novamente.');
        return;
      }

      try {
        // Usar o contexto de autenticação para fazer login, passando a opção de lembrar-me
        await login(credentialResponse.credential, rememberMe);
        
        // Navegar para a página inicial após login bem-sucedido
        navigate('/home');
        toast.success('Login realizado com sucesso!');
      } catch (loginError) {
        console.error('Erro durante o processo de login:', loginError);
        toast.error('Ocorreu um erro durante o login. Tente novamente.');
      }
    } catch (error) {
      console.error('Erro ao processar credencial:', error);
      toast.error('Falha no processamento da autenticação. Tente novamente.');
    }
  };
  
  const handleLoginError = (): void => {
    console.error('Login do Google falhou');
    toast.error('Falha na autenticação com o Google. Tente novamente.');
  };

  return (
    <div>
      {loading && <span className="text-xs text-gray-500 mr-2">Carregando...</span>}
      {error && <div className="text-xs text-red-500 mb-2">{error}</div>}
      <GoogleLogin
        onSuccess={handleLoginSuccess}
        onError={handleLoginError}
        useOneTap
        text="signin_with"
        shape="pill"
        size="large"
        locale="pt-BR"
        logo_alignment="center"
      />
    </div>
  );
};

export default GoogleAuthButton;
